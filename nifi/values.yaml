---

# image details
image:
  repository: apache/nifi
  tag: "1.11.4"
  pullPolicy: IfNotPresent

# security context as per user in nifi image
# This sets up the os-user security context to run the docker container
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# statefulset replica-count
replicaCount: 3

# headless service
headless:
  type: ClusterIP
  annotations: 
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"

# ui service
service:
  type: LoadBalancer
  http_port: 80
  https_port: 443
  annotations: {}
  sessionAffinity: "ClientIP"
  sessionAffinityTimeoutInSeconds: 60

# Values for nifi.properties
nifi_properties:
  http_port: 8080
  https_port: 8443
  cluster_port: 8081
  provenance_implementation: org.apache.nifi.provenance.VolatileProvenanceRepository
# performance parameters
  protocol_threads: 5
  max_protocol_threads: 10
  cluster_timeout: 60
  zk_timeout: 15
  webProxyHost: ""
# security parameters
  secured: false
# authentication parameters
  authentication:
    ldap:
      enabled: false
      url: ""
      manager_dn: ""
      manager_password: ""
      admin_user_cn: ""
      user_search_base: ""
      user_search_filter: ""
      user_search_scope: "ONE_LEVEL"
      authorizers_provider_enforce_case_sensitivity: "false"
      authorizers_provider_sync_interval: "30 mins"
      authorizers_provider_page_size: ""
      authorizers_provider_user_object_class: ""
      authorizers_provider_user_search_scope: "ONE_LEVEL"
      authorizers_provider_user_search_filter: ""
      authorizers_provider_user_identity_attribute: "cn"
      authorizers_provider_user_group_name_attribute: ""
      authorizers_provider_user_referenced_group_attribute: ""
      authorizers_provider_group_search_base: ""
      authorizers_provider_group_object_class: ""
      authorizers_provider_group_search_scope: "ONE_LEVEL"
      authorizers_provider_group_search_filter: ""
      authorizers_provider_group_name_attribute: "cn"
      authorizers_provider_group_member_attribute: ""
      authorizers_provider_group_referenced_user_attribute: ""
      auth_strategy: "SIMPLE"
      referral_strategy: "FOLLOW"
      connect_timeout: "10 secs"
      read_timeout: "10 secs"
      identity_strategy: "USE_USERNAME"
      authentication_expiration_period: "12 hours"
    openid:
      enabled: false
      discovery_url: ""
      client_id: ""
      client_secret: ""
      admin_user: ""
      additional_scopes: "profile"
      preferred_jws_algorithm: ""
      claim_identitying_user: ""

# performance parameters
# Values for bootstrap.conf
bootstrap_conf:
  jvmMemory: 32g
  g1ReservePercent: 20
  concGcThreads: 1
  parallelGcThreads: 1
  initiatingHeapOccupancyPercent: 35

# pvc details
persistence:
  storageClass: default
  accessModes:  [ReadWriteOnce]
  configPartitionSize: 100Mi
  dataPartition1Size: 500Gi
  dataPartition2Size: 500Gi
  dataPartition3Size: 500Gi
  logPartitionSize: 5Gi

# Configure resource requests for nifi pods
resources:
  requests:
    memory: "50Gi"
    cpu: "0.9"

# Parameters for logging containers running in statefulset
logContainers:
  enabled: true
  image:
    repository: alpine
    pullPolicy: IfNotPresent
    tag: latest
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
    limits:
      cpu: 50m
      memory: 50Mi

# nodeselector
nodeSelector: {}

# zookeeper details
zookeeper:
  enabled: true
  server: ""
  port: 2181
  image:
    repository: zookeeper
    pullPolicy: IfNotPresent
    tag: latest

# One can include additional libraries in the Nifi containers by using the postStart handler
# postStart is essentially a shell command one can execute on the pods coming up
# postStart: wget -P /opt/nifi/extensions/my.nar https://myLocation/my.nar

# ca server details
# Setting this true would create a nifi-toolkit based ca server
# The ca server will be used to generate self-signed certificates required setting up secured cluster
ca:
  enabled: false
  server: ""
  port: 9090
  token: sixteenCharacters
  admin:
    cn: admin
  image:
    repository: apache/nifi-toolkit
    pullPolicy: IfNotPresent
    tag: "1.11.4"